@use "../../../../styles/variables" as variables;
@use "../../../../styles/mixins" as mixins;

.form-group {
  margin-bottom: var(--spacing-8);
  position: relative;

  &:last-of-type {
    margin-bottom: var(--spacing-8);
  }

  .input-wrapper {
    position: relative;

    .input-icon {
      position: absolute;
      left: var(--spacing-4);
      top: 50%;
      transform: translateY(-50%);
      color: var(--color-text-tertiary);
      font-size: var(--font-size-lg);
      pointer-events: none;
      opacity: 0.7;
      transition: all 0.3s ease;
    }
  }

  label {
    display: block;
    margin-bottom: var(--spacing-2);
    color: var(--color-text-secondary);
    font-weight: var(--font-weight-medium);
    font-size: var(--font-size-sm);
    transition: all 0.3s ease;
    transform-origin: left;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    opacity: 0.8;
    display: flex;
    align-items: center;
    gap: var(--spacing-2);

    .required-mark {
      color: var(--color-error);
      font-size: var(--font-size-sm);
    }

    &.focused {
      color: var(--color-primary);
      opacity: 1;
      transform: translateY(-2px);
    }
  }

  input {
    width: 100%;
    padding: var(--spacing-4) var(--spacing-5);
    padding-left: calc(var(--spacing-8) + var(--spacing-4));
    border: 2px solid var(--color-border);
    border-radius: var(--border-radius-lg);
    background: var(--color-surface-2);
    color: var(--color-text);
    font-size: var(--font-size-base);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    outline: none;

    &::placeholder {
      color: var(--color-text-tertiary);
      opacity: 0.7;
      transition: all 0.3s ease;
    }

    &:hover {
      border-color: rgba(var(--color-primary-rgb), 0.5);
      background: var(--color-surface);

      & + .input-icon {
        opacity: 1;
        color: var(--color-text-secondary);
      }
    }

    &:focus {
      border-color: var(--color-primary);
      background: var(--color-surface);
      box-shadow: 0 0 0 4px rgba(var(--color-primary-rgb), 0.1);
      transform: translateY(-1px);

      &::placeholder {
        opacity: 0.4;
        transform: translateX(5px);
      }

      & + .input-icon {
        color: var(--color-primary);
        opacity: 1;
        transform: translate(-50%, -50%) scale(1.1);
      }
    }

    &.empty {
      background: rgba(var(--color-warning-rgb), 0.05);
      border-color: var(--color-warning);

      &:focus {
        box-shadow: 0 0 0 4px rgba(var(--color-warning-rgb), 0.1);
      }

      & + .input-icon {
        color: var(--color-warning);
        animation: shake 0.5s ease-in-out;
      }
    }

    &.error {
      border-color: var(--color-error);
      background: rgba(var(--color-error-rgb), 0.05);

      &:focus {
        box-shadow: 0 0 0 4px rgba(var(--color-error-rgb), 0.1);
      }

      & + .input-icon {
        color: var(--color-error);
        animation: shake 0.5s ease-in-out;
      }
    }

    &.success {
      border-color: var(--color-success);
      background: rgba(var(--color-success-rgb), 0.05);

      &:focus {
        box-shadow: 0 0 0 4px rgba(var(--color-success-rgb), 0.1);
      }

      & + .input-icon {
        color: var(--color-success);
      }
    }
  }

  .error-message {
    position: absolute;
    bottom: -24px;
    left: 0;
    color: var(--color-error);
    font-size: var(--font-size-sm);
    opacity: 0;
    transform: translateY(-5px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    padding: var(--spacing-1) var(--spacing-2);
    border-radius: var(--border-radius-sm);
    background: rgba(var(--color-error-rgb), 0.1);
    backdrop-filter: blur(4px);
    max-width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    &::before {
      content: "⚠️";
      font-size: var(--font-size-sm);
      flex-shrink: 0;
    }

    &.visible {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
}
